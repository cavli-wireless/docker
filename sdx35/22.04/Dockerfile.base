# Use the official Ubuntu 22.04 base image
FROM ubuntu:22.04

# Update and install basic tools for openwrt
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    sudo \
    build-essential clang flex bison g++ gawk \
    gcc-multilib g++-multilib gettext git libncurses5 libncurses5-dev libssl-dev \
    python3-setuptools rsync swig unzip zlib1g-dev file wget && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Update and install basic tools for common use
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends\
    dh-autoreconf libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev build-essential && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Update and install basic tools for build modem/boot etc..
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    boxes \
    vim \
    uuid-dev \
    python3-pip python3-dev python3-venv \
    locales \
    pkg-config libyaml-dev libxml-parser-perl ssh-client p7zip-full && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Python 3.6 need gcc-10 ( will crash )
RUN apt-get update && apt-get install -y \
    gcc-10 g++-10 && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# From ubuntu jammy, we need in stall libffi-dev BEFORE build python
# Or we will face issue "No module named '_ctypes'"
RUN apt-get update && apt-get install -y \
    libffi-dev && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Set default at gcc-10
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 30
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 20
RUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 30
RUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 20
RUN update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30
RUN update-alternatives --set cc /usr/bin/gcc
RUN update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30
RUN update-alternatives --set c++ /usr/bin/g++

RUN mkdir -p /usr/lib/python3.6/site-packages/
RUN ln -s /usr/share/pyshared/lsb_release.py /usr/lib/python3.6/site-packages/lsb_release.py
RUN wget https://www.python.org/ftp/python/3.6.9/Python-3.6.9.tgz
RUN tar -xvf Python-3.6.9.tgz
RUN cd /Python-3.6.9 ; bash configure --prefix=/usr/ ; make -j$(npoc) ; make install
RUN rm -rf /Python-3.6.9*

RUN mkdir -p /usr/lib/python3.8/site-packages/
RUN ln -s /usr/share/pyshared/lsb_release.py /usr/lib/python3.8/site-packages/lsb_release.py
RUN wget https://www.python.org/ftp/python/3.8.12/Python-3.8.12.tgz
RUN tar -xvf Python-3.8.12.tgz
RUN cd /Python-3.8.12 ; bash configure --enable-optimizations --prefix=/usr/ ; make -j$(npoc) ; make install
RUN rm -rf /Python-3.8.12*

RUN wget https://bootstrap.pypa.io/pip/3.6/get-pip.py
RUN python3.6 get-pip.py
RUN python3.6 -m pip install virtualenv pyyaml
RUN python3.6 -m pip install --upgrade pip
RUN rm -rf /get-pip.py

RUN wget https://bootstrap.pypa.io/get-pip.py
RUN python3.8 get-pip.py
RUN python3.8 -m pip install virtualenv pyyaml
RUN python3.8 -m pip install --upgrade pip
RUN python3.10 get-pip.py
RUN python3.10 -m pip install virtualenv pyyaml
RUN python3.10 -m pip install --upgrade pip
RUN rm -rf /get-pip.py

RUN wget https://storage.googleapis.com/git-repo-downloads/repo
RUN chmod a+rx /repo
RUN mv /repo /usr/bin/

RUN wget https://git.kernel.org/pub/scm/utils/dtc/dtc.git/snapshot/dtc-1.6.0.tar.gz
RUN tar -xzf dtc-1.6.0.tar.gz ; cd dtc-1.6.0 ; make
RUN mkdir -p /pkg/tools/dtc
RUN mkdir -p /pkg/qct/software/boottools
RUN cp -rfv /dtc-1.6.0/* /pkg/tools/dtc/
RUN cp -rfv /dtc-1.6.0/* /pkg/qct/software/boottools/
RUN rm -rf /dtc-1.6.0.tar.gz /dtc-1.6.0/

RUN sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.6 2
RUN sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.8 3
RUN sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.10 2
RUN sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.6 2
RUN sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 3
RUN sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 2

RUN git config --global user.name "firmware"
RUN git config --global user.email "firmware@cavliwireless.com"

RUN ln -sf /usr/bin/make /usr/bin/gmake
RUN ln -sf /usr/bin/bash /usr/bin/sh

# Default command (optional, for testing)
CMD ["bash"]
