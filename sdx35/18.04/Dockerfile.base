# Use the official Ubuntu 18.04 base image
FROM ubuntu:18.04

# Update and install basic tools
RUN apt-get update && apt-get install -y \
    sudo \
    build-essential \
    ccache \
    ecj \
    fastjar \
    file \
    g++ \
    gawk \
    gettext \
    git \
    java-propose-classpath \
    libelf-dev \
    libncurses5-dev \
    libncursesw5-dev \
    libssl-dev \
    python \
    python2.7-dev \
    python3 \
    python3-distutils \
    python3-setuptools \
    python3-dev \
    unzip \
    wget \
    rsync \
    subversion \
    swig \
    time \
    xsltproc \
    build-essential clang flex bison g++ gawk \
    gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev \
    python3-distutils python3-setuptools rsync swig unzip zlib1g-dev file wget \
    zlib1g-dev && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -y \
    boxes \
    vim \
    uuid-dev \
    python3-pip python3-venv \
    locales \
    pkg-config libyaml-dev \
    repo && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# RUN export LC_ALL="en_US.UTF-8"
# RUN export LC_CTYPE="en_US.UTF-8"
# RUN dpkg-reconfigure locales

RUN apt-get update && apt-get install -y \
    gcc-6 g++-6 && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 30
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 20
RUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 30
RUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 20
RUN update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30
RUN update-alternatives --set cc /usr/bin/gcc
RUN update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30
RUN update-alternatives --set c++ /usr/bin/g++

RUN mkdir -p /usr/lib/python3.8/site-packages/
RUN ln -s /usr/share/pyshared/lsb_release.py /usr/lib/python3.8/site-packages/lsb_release.py
RUN wget https://www.python.org/ftp/python/3.8.2/Python-3.8.2.tgz
RUN tar -xvf Python-3.8.2.tgz
RUN cd /Python-3.8.2 ; bash configure --enable-optimizations --prefix=/usr/ ; make -j$(npoc) ; make install
RUN rm -rf /Python-3.8.2*

RUN mkdir -p /usr/lib/python3.10/site-packages/
RUN ln -s /usr/share/pyshared/lsb_release.py /usr/lib/python3.10/site-packages/lsb_release.py
RUN wget https://www.python.org/ftp/python/3.10.12/Python-3.10.12.tgz
RUN tar -xvf Python-3.10.12.tgz
RUN cd /Python-3.10.12 ; bash configure --enable-optimizations --prefix=/usr/ ; make -j$(npoc) ; make install
RUN rm -rf /Python-3.10.12*

RUN wget https://git.kernel.org/pub/scm/utils/dtc/dtc.git/snapshot/dtc-1.6.0.tar.gz
RUN tar -xzf dtc-1.6.0.tar.gz ; cd dtc-1.6.0 ; make
RUN mkdir -p /pkg/tools/dtc
RUN mkdir -p /pkg/qct/software/boottools
RUN cp -rfv /dtc-1.6.0/* /pkg/tools/dtc/
RUN cp -rfv /dtc-1.6.0/* /pkg/qct/software/boottools/
RUN rm -rf /dtc-1.6.0.tar.gz /dtc-1.6.0/

RUN wget https://bootstrap.pypa.io/get-pip.py
RUN python3.8 get-pip.py
RUN python3.8 -m pip install virtualenv pyyaml
RUN python3.8 -m pip install pyyaml
RUN python3.10 get-pip.py
RUN python3.10 -m pip install virtualenv pyyaml
RUN python3.10 -m pip install pyyaml
RUN rm -rf /get-pip.py

RUN update-alternatives --install /usr/bin/python python /usr/bin/python2.7 2
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.6 3
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.8 2
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.10 2

RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 3
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 2
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 2

RUN git config --global user.name "firmware"
RUN git config --global user.email "firmware@cavliwireless.com"

RUN ln -s /usr/bin/make /usr/bin/gmake 
RUN ln -sf /bin/bash /bin/sh
# Default command (optional, for testing)
CMD ["bash"]
